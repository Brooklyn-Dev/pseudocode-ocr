{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OCR Pseudocode",
	"patterns": [
		{
			"include": "#subroutines"
		},
		{
			"include": "#classes"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.ocr-pseudocode",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.double-slash.ocr-pseudocode",
					"begin": "//",
					"end": "$"
				}
			]
		},
		"classes": {
			"match": "\\b(class)\\s+([A-Za-z_][A-Za-z0-9_]*)",
			"captures": {
				"1": { "name": "storage.type.ocr-pseudocode" },
				"2": { "name": "entity.name.class.ocr-pseudocode" }
			}
		},
		"subroutines": {
			"match": "\\b(procedure|function)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*\\(([^)]*)\\)",
			"captures": {
				"1": { "name": "storage.type.ocr-pseudocode" },
				"2": { "name": "entity.name.function.ocr-pseudocode" },
				"3": { "name": "variable.parameter.ocr-pseudocode" }
			}
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.ocr-pseudocode",
					"match": "\\b(if|then|elseif|elif|else|endif|switch|case|default|endswitch|while|endwhile|for|to|next|continue|break|return)\\b"
				},
				{
					"name": "storage.type.ocr-pseudocode",
					"match": "\\b(class|inherits|super|endclass|new|procedure|endprocedure|function|endfunction)\\b"
				},
				{
					"name": "storage.modifier.ocr-pseudocode",
					"match": "\\b(public|private|static|const)\\b"
				},
				{
					"name": "constant.language.ocr-pseudocode",
					"match": "\\b(true|false|null|undefined)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.ocr-pseudocode",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.ocr-pseudocode",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.ocr-pseudocode",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.ocr-pseudocode",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.ocr-pseudocode",
			"match": "\\b\\d+(\\.\\d+)?\\b"
		},
		"operators": {
			"name": "keyword.operator.ocr-pseudocode",
			"match": "(AND|OR|NOT|XOR|LSHIFT|RSHIFT|=|==|!=|<|<=|>|>=|\\+|\\-|\\*|\\/|MOD|DIV|\\^)"
		}
	},
	"scopeName": "source.ocr-pseudocode"
}
